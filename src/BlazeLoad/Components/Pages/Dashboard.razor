@page "/"
@using BlazeLoad.Components.Controls
@using BlazeLoad.Components.Dialogs
@using BlazeLoad.Services

@inject IDialogService DialogService
@inject DownloadService Downloads

<PageTitle>BlazeLoad - Dashboard</PageTitle>
<MudDivider Class="my-2"/>
<MudText Typo="Typo.h5" Class="mb-2">@_repaintCount</MudText>
<DownloadToolBar OnAddDownload="ShowAddDialog"
                 TotalSpeed="@Downloads.TotalSpeedFormatted"
                 Active="@Downloads.ActiveCount"
                 Queued="@Downloads.QueuedCount"
                 Total="@Downloads.TotalCount"
                 OnPauseAll="@Downloads.PauseAllAsync"
                 OnStopAll="@Downloads.StopAllAsync"/>

<MudDivider Class="my-2"/> <!-- my-2 = 0,5 rem Abstand oben & unten -->

<DownloadList Items="@Downloads.ActiveItems"/>

@code {

    protected override void OnInitialized()
    {
        Downloads.Updated += OnDownloadsUpdated;
    }
    
    private long _repaintCount;
    
    private void OnDownloadsUpdated()
    {
        Interlocked.Increment(ref _repaintCount);
        InvokeAsync(StateHasChanged);
    }
    
    public void Dispose()
    {
        Downloads.Updated -= OnDownloadsUpdated;
    }

    private async Task ShowAddDialog()
    {
        var options = new DialogOptions
        {
            MaxWidth  = MaxWidth.Medium,   // oder Large / None
            FullWidth = true               // füllt gesamte Breite bis MaxWidth
        };
        
        var dlgRef = await DialogService.ShowAsync<AddDownloadDialog>("Download hinzufügen", options);
        var result = await dlgRef.Result;

        if (result is { Canceled: false, Data: AddDownloadDialog.AddDownloadModel m })
        {
            Downloads.AddDownload(m.Url, m.FileName, m.TargetDirectory);

            // gewünschten Dateinamen einsetzen, falls anders als URL-Name
            var item = Downloads.QueueItems.LastOrDefault();
            if (item is not null) item.FileName = m.FileName;
        }
    }

}