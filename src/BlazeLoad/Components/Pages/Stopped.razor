@page "/stopped"

@using BlazeLoad.Components.Controls
@using BlazeLoad.Components.Dialogs
@using BlazeLoad.Services

@inject IDialogService DialogService
@inject DownloadService Downloads

<PageTitle>BlazeLoad - Stopped Downloads</PageTitle>
<MudDivider Class="my-2"/>
<DownloadToolBar OnAddDownload="ShowAddDialog"
                 TotalSpeed="@Downloads.TotalSpeedFormatted"
                 Active="@Downloads.ActiveCount"
                 Queued="@Downloads.QueuedCount"
                 Total="@Downloads.TotalCount"
                 OnPauseAll="@Downloads.PauseAllAsync"
                 OnStopAll="@Downloads.StopAllAsync"/>

<MudDivider Class="my-2"/>

<DownloadList Items="@Downloads.Stopped"/>

@code {
    protected override void OnInitialized()
    {
        Downloads.Updated += OnDownloadsUpdated;
    }

    private void OnDownloadsUpdated()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Downloads.Updated -= OnDownloadsUpdated;
    }

    private async Task ShowAddDialog()
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Medium,
            FullWidth = true
        };

        var dlgRef = await DialogService.ShowAsync<AddDownloadDialog>("Download hinzufügen", options);
        var result = await dlgRef.Result;

        if (result is { Canceled: false, Data: AddDownloadDialog.AddDownloadModel m })
        {
            await Downloads.AddAsync(m.Url, m.TargetDirectory, m.FileName);

            // gewünschten Dateinamen einsetzen, falls anders als URL-Name
            var item = Downloads.Queue.LastOrDefault();
            if (item is not null) item.Name = m.FileName;
        }
    }
}